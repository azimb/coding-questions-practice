Longest palindromic substring:
    - code seems to work
    - feedback is given and implemeted
    - there is question on feedback, answer pending

Reverse linked list:
    - All bugs are fixed
    - Code seems to work
    - Feedback pending

Reverse sentence in c-string:
    - feedback given and code merged into master
    - TODO: verify runtime

House Robber:
    - code seems to work for small inputs
    - verify why leetcode says "time exceeded."
    - verify runtime complexity
    - waiting for coding style based feedbacki
    - check if it needs a cache to allow dynamic programming

Find Missing (number):
    - code seems to work
    - feedback given + implemented
    - merge pending

Rotate Matrix 2D - one:
    - code seems to work
    - PR created
    - feedback pending
    - TODO: verify what exactly ln27 is doing

Rotate Matrix 2D - two:
    - unclear understanding
    - no code added yet
    - read explanation here:
    https://www.geeksforgeeks.org/inplace-rotate-square-matrix-by-90-degrees/

Palindromic Linked List:
    - code seems to work
    - feedback given: code can be cleaned up
    - better solution from leetcode (url is living on messenger)

Merge two (sorted) linked lists:
    - code seems to work
    - leetcode tests pass
    - unit tests pass
    - merge approval pending

Maximum subarray:
    - code seems to work and UT pass
    - feedback pending
    - some leetcode tests give "time exceeded error"
    - look at leetcode solutions to use a better approach than the current
    O(N^2) approach

Plus one:
    - code works
    - UT and leetcode tests pass
    - Shridhar sent some good code for this problem

Add binary:
    - feedback implemeted -- adding binary strings directly
    - Code is messy
    - Shridhar gave his code (haven't looked at it yet)

sqrt:
    - implemented binary search approach
    - UT and leetcode tests pass
    - understanding is not crystal clear
    - waiting for feedback


Remove duplicates:
    - both LC tests and UT pass
    - feedback pending

Is same tree:
    - code seems to work
    - LC tests pass
    - UT pending
    - will put it up for review when UT are done

max depth of binary tree:
    - code seems to work
    - LC tests pass
    - UT pending
    - will put up the code for review when UT are added



* some problems missing here that live on leetcode *

is tree symmetric:
    - code works
    - leetcode tests pass
    - unit tests pending
    - runime and space complexity discussion pending
    - feeback -- code looks good but cleaner code provided by Shridhar
      (haven't looked at it yet)
      

is tree balanced:
    - code works
    - leetcode tests pass
    - unit tests pending
    - code needs to be pused on to the remote repo

are trees same:
    - code works
    - leetcode tests pass
    - UT pending
    - code needs to be pused on GitHub

hasPathSum:
    - code works
    - leetcode tests pass
    - UT pending
    - feedback: approved
    - just need to verify time complexity and add space complexity

Buy and Sell Stocks
    - code works
    - LC tests pass, UT pending
    - my solution uses extra space (which seems okay) 
    - still implemented constant space algo from a youtube video
    - look at the LC solution (Java), write your own solution (Python), and then put it up for review

Pascal's triangle one
    - code works on leetcode
    - complexity analysis and UT pending
    - not sure if the code has the most efficient approach
    - feedback: can you do better?
    - LC gave sols, check those

Valid Palindrome:
    - code doesn't work -- there seems to be a bug
    
Single Number:
    - code is living on LC
    - all LC tests pass
    - pending: write code locally, make thorough unit tests, and put it up for review
    
Min Stack:
    - code is living on LC
    - all LC tests pass
    - pending: write code locally, make thorough unit tests, and put it up for review

Two Sum II - input array is sorted
    - code is living on LC
    - all LC tests pass
    - pending: write code locally, make thorough unit tests, and put it up for review
 
Factorial Trailing Zeroes:
    - code is living on LC
    - all LC tests pass
    - pending: write code locally, make thorough unit tests, and put it up for review
    
Rotate Array:
    - code is living on LC
    - all LC tests pass
    - pending: write code locally, make thorough unit tests, and put it up for review
    
Construct a complete binary tree from given array in level order fashion:
    - code written with the help of an example from GeeksForGeeks
    - UT pass
    - feedback implemented, merge pending
    
Happy number:
    - code looks good
    - but need to prove why all happy numbers wil add up to 4 (follow the 8 numbers cycle)
    
Max sum subarray:
    - code finished, algo is efficient
    - LC and UT pass
    - waiting for feedback
    
Subarrays with sum k:
    - code finished, edge case(s) are failing
    - TODO: add a fix for the edge cases
    - everything else looks fine
    - UT pending, review pending




add-two-numbers:
    - UT and LC tests pass
    - submitted for feedback
